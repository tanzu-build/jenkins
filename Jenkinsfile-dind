pipeline {
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: jnlp
            image: harbor.h2o-4-11809.h2o.vmware.com/library/jenkins/inbound-agent:latest-jdk17
            args: ["-noCertificateCheck"]
          - name: maven
            image: harbor.h2o-4-11809.h2o.vmware.com/library/maven:3
            command:
            - cat
            tty: true
          - name: docker
            image: harbor.h2o-4-11809.h2o.vmware.com/library/docker:dind
            command:
            - cat
            tty: true
            volumeMounts:
             - mountPath: /var/run/docker.sock
               name: docker-sock
          volumes:
          - name: docker-sock
            hostPath:
              path: /var/run/docker.sock    
        '''
    }
  }
  stages {
    stage('Clone') {
      steps {
        container('maven') {
          git branch: 'main', changelog: false, poll: false, url: 'https://github.com/spring-projects/spring-petclinic.git'
        }
      }
    }  
    stage('Build-Jar-file') {
      steps {
        container('maven') {
          sh 'mvn package'
        }
      }
    }
    stage('Build-Docker-Image') {
      steps {
        container('docker') {
          sh 'docker build -t harbor.h2o-4-11809.h2o.vmware.com/tanzubuild/testing-image:pippo .'
        }
      }
    }
    stage('Login-Into-Docker') {
      steps {
        container('docker') {
          sh 'docker login -u marygabry1508 -p Chattan00ga1.'
      }
    }
    }
     stage('Push-Images-Docker-to-DockerHub') {
      steps {
        container('docker') {
          sh 'docker push harbor.h2o-4-11809.h2o.vmware.com/tanzubuild/testing-image:pippo'
      }
    }
     }
  }
    post {
      always {
        container('docker') {
          sh 'docker logout'
      }
      }
    }
}